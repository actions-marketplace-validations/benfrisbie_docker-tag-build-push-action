name: 'Docker Tag Build Push'
author: 'benfrisbie'
description: 'A composite action to tag and build a docker image, then optionally login to a registry and push the image.'
branding:
  icon: 'anchor'
  color: 'blue'

inputs:
  checkout:
    description: 'Should the repository be checked out'
    required: false
    default: 'true'
  registry:
    description: 'Server address of Docker registry'
    required: false
    default: ghcr.io
  username:
    description: 'Username used to login against the Docker registry'
    required: false
    default: ${{ github.actor }}
  password:
    description: 'Password or personal access token used to login against the Docker registry'
    required: false
    default: ${{ github.token }}
  push:
    description: 'Should the image be pushed to a registry'
    required: false
    default: false
  image:
    description: 'Docker image name to use as base'
    required: true
    default: ${{ github.repository }}
  build-args:
    description: "List of build-time variables"
    required: false
  context:
    description: "Build's context is the set of files located in the specified PATH or URL"
    required: false
  file:
    description: "Path to the Dockerfile"
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      if: ${{ inputs.checkout }}
    - name: Login to GitHub Container Registry
      if: ${{ inputs.push }}
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    - uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.image }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=ref,event=branch
          type=ref,event=pr
          type=schedule
          type=edge
          type=sha
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          push: ${{ inputs.push }}
          build-args: ${{ inputs.build-args }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
